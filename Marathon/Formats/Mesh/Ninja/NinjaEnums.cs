namespace Marathon.Formats.Mesh.Ninja
{
    public enum NinjaNext_MinFilter : uint
    {
        NND_MIN_NEAREST = 0,
        NND_MIN_LINEAR = 1,
        NND_MIN_NEAREST_MIPMAP_NEAREST = 2,
        NND_MIN_NEAREST_MIPMAP_LINEAR = 3,
        NND_MIN_LINEAR_MIPMAP_NEAREST = 4,
        NND_MIN_LINEAR_MIPMAP_LINEAR = 5,
        NND_MIN_ANISOTROPIC = 6,
        NND_MIN_ANISOTROPIC2 = 6,
        NND_MIN_ANISOTROPIC_MIPMAP_NEAREST = 7,
        NND_MIN_ANISOTROPIC2_MIPMAP_NEAREST = 7,
        NND_MIN_ANISOTROPIC_MIPMAP_LINEAR = 8,
        NND_MIN_ANISOTROPIC2_MIPMAP_LINEAR = 8,
        NND_MIN_ANISOTROPIC4 = 9,
        NND_MIN_ANISOTROPIC4_MIPMAP_NEAREST = 10,
        NND_MIN_ANISOTROPIC4_MIPMAP_LINEAR = 11,
        NND_MIN_ANISOTROPIC8 = 12,
        NND_MIN_ANISOTROPIC8_MIPMAP_NEAREST = 13,
        NND_MIN_ANISOTROPIC8_MIPMAP_LINEAR = 14
    };

    public enum NinjaNext_MagFilter : uint
    {
        NND_MAG_NEAREST = 0,
        NND_MAG_LINEAR = 1,
        NND_MAG_ANISOTROPIC = 2
    };

    public enum NinjaNext_MaterialType : uint
    {
        NND_MATTYPE_TEXTURE = 1,
        NND_MATTYPE_TEXTURE2 = 2,
        NND_MATTYPE_TEXTURE3 = 3,
        NND_MATTYPE_TEXTURE4 = 4,
        NND_MATTYPE_TEXMATTYPE2 = 16,
    };

    public enum NinjaNext_BlendMode : uint
    {
        NNE_BLENDMODE_SRCALPHA = 0x302,
        NNE_BLENDMODE_INVSRCALPHA = 0x303
    };
    public enum NinjaNext_BlendOperation : uint
    {
        NNE_BLENDOP_ADD = 0x8006
    };

    public enum NinjaNext_LogicOperation : uint
    {
        NNE_LOGICOP_NONE = 0
    };

    public enum NinjaNext_CMPFunction : uint
    {
        NNE_CMPFUNC_NEVER = 0x200,
        NNE_CMPFUNC_LESS = 0x201,
        NNE_CMPFUNC_EQUAL = 0x202,
        NNE_CMPFUNC_LESSEQUAL = 0x203,
        NNE_CMPFUNC_GREATER = 0x204,
        NNE_CMPFUNC_NOTEQUAL = 0x205,
        NNE_CMPFUNC_GREATEREQUAL = 0x206,
        NNE_CMPFUNC_ALWAYS = 0x207
    };

    public enum NinjaNext_VertexType : uint
    {
        /* Masks */
        NND_VTXTYPE_PLATFORM_MASK = 0xFFFF,
        NND_VTXTYPE_COMMON_MASK = 0xFF0000,
        NND_VTXTYPE_USER_MASK = 0xFF000000,

        /* Xbox/PC types */
        NND_VTXTYPE_DX_VERTEXDESC = 1,

        /* Common types */
        NND_VTXTYPE_COMMON_VTXDESC = 0x10000,
        NND_VTXTYPE_COMMON_VTXDESC_MORPH_TARGET = 0x20000,
        NND_VTXTYPE_COMMON_VTXDESC_MORPH_TARGET_NULL = 0x40000,
        NND_VTXTYPE_COMMON_VTXDESC_MORPH_OBJECT = 0x80000
    };

    [Flags]
    public enum NinjaNext_XboxVertexType : uint
    {
        /* Xbox types */
        // TODO: Is all of this right?    
        NND_VTXTYPE_XB_POSITION = 0x01U,
        NND_VTXTYPE_XB_NORMAL = 0x02U,
        NND_VTXTYPE_XB_COLOR = 0x08U,
        NND_VTXTYPE_XB_COLOR2 = 0x10U,
        NND_VTXTYPE_XB_TANGENT = 0x40U, /* TODO: Is this right? Might be 0x100. */
        NND_VTXTYPE_XB_BINORMAL = 0x100U, /* TODO: Is this right? Might be 0x40. */
        NND_VTXTYPE_XB_MTX_INDEX4 = 0x400U,
        NND_VTXTYPE_XB_WEIGHT3 = 0x7000U,
        NND_VTXTYPE_XB_TEXCOORD = 0x10000U,

        NND_VTXTYPE_XB_PNCT = (NND_VTXTYPE_XB_POSITION |
            NND_VTXTYPE_XB_NORMAL | NND_VTXTYPE_XB_COLOR |
            NND_VTXTYPE_XB_TEXCOORD),

        NND_VTXTYPE_XB_PW4INCT = (NND_VTXTYPE_XB_POSITION |
            NND_VTXTYPE_XB_WEIGHT3 | NND_VTXTYPE_XB_MTX_INDEX4 |
            NND_VTXTYPE_XB_NORMAL | NND_VTXTYPE_XB_COLOR |
            NND_VTXTYPE_XB_TEXCOORD),

        NND_VTXTYPE_XB_PW4INCTAB = (NND_VTXTYPE_XB_POSITION |
            NND_VTXTYPE_XB_WEIGHT3 | NND_VTXTYPE_XB_MTX_INDEX4 |
            NND_VTXTYPE_XB_NORMAL | NND_VTXTYPE_XB_COLOR |
            NND_VTXTYPE_XB_TEXCOORD | NND_VTXTYPE_XB_TANGENT |
            NND_VTXTYPE_XB_BINORMAL),
    }

    public enum NinjaNext_FlexibleVertexFormat : uint
    {
        /* Masks */
        NND_D3DFVF_POSITION_MASK = 0x400EU,
        NND_D3DFVF_TEXCOUNT_MASK = 0xf00U,

        /* Types */
        NND_D3DFVF_TEXTUREFORMAT2 = 0,
        NND_D3DFVF_TEXTUREFORMAT3 = 1,
        NND_D3DFVF_TEXTUREFORMAT4 = 2,
        NND_D3DFVF_TEXTUREFORMAT1 = 3,

        NND_D3DFVF_XYZ = 2,
        NND_D3DFVF_XYZRHW = 4,
        NND_D3DFVF_XYZB1 = 6,
        NND_D3DFVF_XYZB2 = 8,
        NND_D3DFVF_XYZB3 = 10,
        NND_D3DFVF_XYZB4 = 12,
        NND_D3DFVF_XYZB5 = 14,
        NND_D3DFVF_XYZW = 0x4002U,

        NND_D3DFVF_NORMAL = 0x010U,
        NND_D3DFVF_PSIZE = 0x020U,
        NND_D3DFVF_DIFFUSE = 0x040U,
        NND_D3DFVF_SPECULAR = 0x080U,

        NND_D3DFVF_TEX0 = 0x000U,
        NND_D3DFVF_TEX1 = 0x100U,
        NND_D3DFVF_TEX2 = 0x200U,
        NND_D3DFVF_TEX3 = 0x300U,
        NND_D3DFVF_TEX4 = 0x400U,
        NND_D3DFVF_TEX5 = 0x500U,
        NND_D3DFVF_TEX6 = 0x600U,
        NND_D3DFVF_TEX7 = 0x700U,
        NND_D3DFVF_TEX8 = 0x800U,

        NND_D3DFVF_LASTBETA_UBYTE4 = 0x1000U,
        NND_D3DFVF_LASTBETA_D3DCOLOR = 0x8000U
    };

    public enum NinjaNext_PrimitiveType : uint
    {
        /* Xbox types */
        NND_PRIMTYPE_DX_STRIPLIST = 1
    };

    public enum NNE_MOTIONTYPE : uint
    {
        /* Masks */
        NND_MOTIONTYPE_CATEGORY_MASK = 31,
        NND_MOTIONTYPE_REPEAT_MASK = 0x1F0040U,

        /* Flags */
        NND_MOTIONTYPE_VERSION2 = 0x10000000U,

        /* Repeat types */
        NND_MOTIONTYPE_TRIGGER = 64,
        NND_MOTIONTYPE_NOREPEAT = 0x10000U,
        NND_MOTIONTYPE_CONSTREPEAT = 0x20000U,
        NND_MOTIONTYPE_REPEAT = 0x40000U,
        NND_MOTIONTYPE_MIRROR = 0x80000U,
        NND_MOTIONTYPE_OFFSET = 0x100000U,

        /* Motion types */
        NND_MOTIONTYPE_NODE = 1,
        NND_MOTIONTYPE_CAMERA = 2,
        NND_MOTIONTYPE_LIGHT = 4,
        NND_MOTIONTYPE_MORPH = 8,
        NND_MOTIONTYPE_MATERIAL = 16
    };

    public enum NNE_SMOTTYPE : uint
    {
        /* Masks */
        NND_SMOTTYPE_FRAME_MASK = 3,
        NND_SMOTTYPE_ANGLE_MASK = 28,
        NND_SMOTTYPE_TRANSLATION_MASK = 0x700U,
        NND_SMOTTYPE_DIFFUSE_MASK = 0xE00U,
        NND_SMOTTYPE_ROTATION_MASK = 0x7800U,
        NND_SMOTTYPE_SPECULAR_MASK = 0xE000U,
        NND_SMOTTYPE_SCALING_MASK = 0x38000U,
        NND_SMOTTYPE_USER_MASK = 0xC0000U,
        NND_SMOTTYPE_LIGHT_COLOR_MASK = 0xE00000U,
        NND_SMOTTYPE_OFFSET_MASK = 0x1800000U,
        NND_SMOTTYPE_TARGET_MASK = 0x1C0000U,
        NND_SMOTTYPE_AMBIENT_MASK = 0x1C0000U,
        NND_SMOTTYPE_UPTARGET_MASK = 0x1C00000U,
        NND_SMOTTYPE_TEXTURE_MASK = 0x1E00000U,
        NND_SMOTTYPE_UPVECTOR_MASK = 0xE000000U,
        NND_SMOTTYPE_VALUETYPE_MASK = 0xFFFFFF00U,

        /* Frame types */
        NND_SMOTTYPE_FRAME_FLOAT = 1,
        NND_SMOTTYPE_FRAME_SINT16 = 2,

        /* Angle types */
        NND_SMOTTYPE_ANGLE_RADIAN = 4,
        NND_SMOTTYPE_ANGLE_ANGLE32 = 8,
        NND_SMOTTYPE_ANGLE_ANGLE16 = 16,

        /* Node types */
        NND_SMOTTYPE_TRANSLATION_X = 0x100U,
        NND_SMOTTYPE_TRANSLATION_Y = 0x200U,
        NND_SMOTTYPE_TRANSLATION_Z = 0x400U,

        NND_SMOTTYPE_TRANSLATION_XYZ = (NND_SMOTTYPE_TRANSLATION_X |
            NND_SMOTTYPE_TRANSLATION_Y | NND_SMOTTYPE_TRANSLATION_Z),

        NND_SMOTTYPE_ROTATION_X = 0x800U,
        NND_SMOTTYPE_ROTATION_Y = 0x1000U,
        NND_SMOTTYPE_ROTATION_Z = 0x2000U,

        NND_SMOTTYPE_ROTATION_XYZ = (NND_SMOTTYPE_ROTATION_X |
            NND_SMOTTYPE_ROTATION_Y | NND_SMOTTYPE_ROTATION_Z),

        NND_SMOTTYPE_QUATERNION = 0x4000U,

        NND_SMOTTYPE_SCALING_X = 0x8000U,
        NND_SMOTTYPE_SCALING_Y = 0x10000U,
        NND_SMOTTYPE_SCALING_Z = 0x20000U,

        NND_SMOTTYPE_SCALING_XYZ = (NND_SMOTTYPE_SCALING_X |
            NND_SMOTTYPE_SCALING_Y | NND_SMOTTYPE_SCALING_Z),

        NND_SMOTTYPE_USER_UINT32 = 0x40000U,
        NND_SMOTTYPE_USER_FLOAT = 0x80000U,

        NND_SMOTTYPE_NODEHIDE = 0x100000U,

        /* Camera types */
        NND_SMOTTYPE_TARGET_X = 0x40000U,
        NND_SMOTTYPE_TARGET_Y = 0x80000U,
        NND_SMOTTYPE_TARGET_Z = 0x100000U,

        NND_SMOTTYPE_TARGET_XYZ = (NND_SMOTTYPE_TARGET_X |
            NND_SMOTTYPE_TARGET_Y | NND_SMOTTYPE_TARGET_Z),

        NND_SMOTTYPE_ROLL = 0x200000U,
        NND_SMOTTYPE_UPTARGET_X = 0x400000U,
        NND_SMOTTYPE_UPTARGET_Y = 0x800000U,
        NND_SMOTTYPE_UPTARGET_Z = 0x1000000U,

        NND_SMOTTYPE_UPTARGET_XYZ = (NND_SMOTTYPE_UPTARGET_X |
            NND_SMOTTYPE_UPTARGET_Y | NND_SMOTTYPE_UPTARGET_Z),

        NND_SMOTTYPE_UPVECTOR_X = 0x2000000U,
        NND_SMOTTYPE_UPVECTOR_Y = 0x4000000U,
        NND_SMOTTYPE_UPVECTOR_Z = 0x8000000U,

        NND_SMOTTYPE_UPVECTOR_XYZ = (NND_SMOTTYPE_UPVECTOR_X |
            NND_SMOTTYPE_UPVECTOR_Y | NND_SMOTTYPE_UPVECTOR_Z),

        NND_SMOTTYPE_FOVY = 0x10000000U,
        NND_SMOTTYPE_ZNEAR = 0x20000000U,
        NND_SMOTTYPE_ZFAR = 0x40000000U,
        NND_SMOTTYPE_ASPECT = 0x80000000U,

        /* Light types */
        NND_SMOTTYPE_LIGHT_COLOR_R = 0x200000U,
        NND_SMOTTYPE_LIGHT_COLOR_G = 0x400000U,
        NND_SMOTTYPE_LIGHT_COLOR_B = 0x800000U,

        NND_SMOTTYPE_LIGHT_COLOR_RGB = (NND_SMOTTYPE_LIGHT_COLOR_R |
            NND_SMOTTYPE_LIGHT_COLOR_G | NND_SMOTTYPE_LIGHT_COLOR_B),

        NND_SMOTTYPE_LIGHT_ALPHA = 0x1000000U,
        NND_SMOTTYPE_LIGHT_INTENSITY = 0x2000000U,

        NND_SMOTTYPE_FALLOFF_START = 0x4000000U,
        NND_SMOTTYPE_FALLOFF_END = 0x8000000U,

        NND_SMOTTYPE_INNER_ANGLE = 0x10000000U,
        NND_SMOTTYPE_OUTER_ANGLE = 0x20000000U,
        NND_SMOTTYPE_INNER_RANGE = 0x40000000U,
        NND_SMOTTYPE_OUTER_RANGE = 0x80000000U,

        /* Morph types */
        NND_SMOTTYPE_MORPH_WEIGHT = 0x1000000U,

        /* Material types */
        NND_SMOTTYPE_HIDE = 0x100U,

        NND_SMOTTYPE_DIFFUSE_R = 0x200U,
        NND_SMOTTYPE_DIFFUSE_G = 0x400U,
        NND_SMOTTYPE_DIFFUSE_B = 0x800U,

        NND_SMOTTYPE_DIFFUSE_RGB = (NND_SMOTTYPE_DIFFUSE_R |
            NND_SMOTTYPE_DIFFUSE_G | NND_SMOTTYPE_DIFFUSE_B),

        NND_SMOTTYPE_ALPHA = 0x1000U,

        NND_SMOTTYPE_SPECULAR_R = 0x2000U,
        NND_SMOTTYPE_SPECULAR_G = 0x4000U,
        NND_SMOTTYPE_SPECULAR_B = 0x8000U,

        NND_SMOTTYPE_SPECULAR_RGB = (NND_SMOTTYPE_SPECULAR_R |
            NND_SMOTTYPE_SPECULAR_G | NND_SMOTTYPE_SPECULAR_B),

        NND_SMOTTYPE_SPECULAR_LEVEL = 0x10000U,
        NND_SMOTTYPE_SPECULAR_GLOSS = 0x20000U,

        NND_SMOTTYPE_AMBIENT_R = 0x40000U,
        NND_SMOTTYPE_AMBIENT_G = 0x80000U,
        NND_SMOTTYPE_AMBIENT_B = 0x100000U,

        NND_SMOTTYPE_AMBIENT_RGB = (NND_SMOTTYPE_AMBIENT_R |
            NND_SMOTTYPE_AMBIENT_G | NND_SMOTTYPE_AMBIENT_B),

        NND_SMOTTYPE_TEXTURE_INDEX = 0x200000U,
        NND_SMOTTYPE_TEXTURE_BLEND = 0x400000U,

        NND_SMOTTYPE_OFFSET_U = 0x800000U,
        NND_SMOTTYPE_OFFSET_V = 0x1000000U,
        NND_SMOTTYPE_OFFSET_UV = (NND_SMOTTYPE_OFFSET_U | NND_SMOTTYPE_OFFSET_V),

        NND_SMOTTYPE_MATCLBK_USER = 0x2000000U
    };

    public enum NNE_SMOTIPTYPE : uint
    {
        /* Masks */
        NND_SMOTIPTYPE_IP_MASK = 0xE77U,
        NND_SMOTIPTYPE_REPEAT_MASK = 0x1F0000U,

        /* Repeat types */
        NND_SMOTIPTYPE_NOREPEAT = 0x10000U,
        NND_SMOTIPTYPE_CONSTREPEAT = 0x20000U,
        NND_SMOTIPTYPE_REPEAT = 0x40000U,
        NND_SMOTIPTYPE_MIRROR = 0x80000U,
        NND_SMOTIPTYPE_OFFSET = 0x100000U,

        /* Interpolation types */
        NND_SMOTIPTYPE_SPLINE = 1,
        NND_SMOTIPTYPE_LINEAR = 2,
        NND_SMOTIPTYPE_CONSTANT = 4,
        NND_SMOTIPTYPE_BEZIER = 16,
        NND_SMOTIPTYPE_SI_SPLINE = 32,
        NND_SMOTIPTYPE_TRIGGER = 64,
        NND_SMOTIPTYPE_QUAT_LERP = 512,
        NND_SMOTIPTYPE_QUAT_SLERP = 1024,
        NND_SMOTIPTYPE_QUAT_SQUAD = 2048
    };
}
